// Code generated by girgen. DO NOT EDIT.

package adw

import (
	"runtime"
	"unsafe"

	externglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gtk/v4"
)

// #cgo pkg-config: libadwaita-1
// #cgo CFLAGS: -Wno-deprecated-declarations
// #include <adwaita.h>
// #include <glib-object.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.adw_carousel_indicator_dots_get_type()), F: marshalCarouselIndicatorDotser},
	})
}

// CarouselIndicatorDots dots indicator for adw.Carousel.
//
// The AdwCarouselIndicatorDots widget shows a set of dots for each page of a
// given adw.Carousel. The dot representing the carousel's active page is larger
// and more opaque than the others, the transition to the active and inactive
// state is gradual to match the carousel's position.
//
// See also adw.CarouselIndicatorLines.
//
//
// CSS nodes
//
// AdwCarouselIndicatorDots has a single CSS node with name
// carouselindicatordots.
type CarouselIndicatorDots struct {
	gtk.Widget

	gtk.Orientable
	*externglib.Object
}

func wrapCarouselIndicatorDots(obj *externglib.Object) *CarouselIndicatorDots {
	return &CarouselIndicatorDots{
		Widget: gtk.Widget{
			InitiallyUnowned: externglib.InitiallyUnowned{
				Object: obj,
			},
			Accessible: gtk.Accessible{
				Object: obj,
			},
			Buildable: gtk.Buildable{
				Object: obj,
			},
			ConstraintTarget: gtk.ConstraintTarget{
				Object: obj,
			},
			Object: obj,
		},
		Orientable: gtk.Orientable{
			Object: obj,
		},
		Object: obj,
	}
}

func marshalCarouselIndicatorDotser(p uintptr) (interface{}, error) {
	return wrapCarouselIndicatorDots(externglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// NewCarouselIndicatorDots creates a new AdwCarouselIndicatorDots.
func NewCarouselIndicatorDots() *CarouselIndicatorDots {
	var _cret *C.GtkWidget // in

	_cret = C.adw_carousel_indicator_dots_new()

	var _carouselIndicatorDots *CarouselIndicatorDots // out

	_carouselIndicatorDots = wrapCarouselIndicatorDots(externglib.Take(unsafe.Pointer(_cret)))

	return _carouselIndicatorDots
}

// Carousel gets the displayed carousel.
func (self *CarouselIndicatorDots) Carousel() *Carousel {
	var _arg0 *C.AdwCarouselIndicatorDots // out
	var _cret *C.AdwCarousel              // in

	_arg0 = (*C.AdwCarouselIndicatorDots)(unsafe.Pointer(self.Native()))

	_cret = C.adw_carousel_indicator_dots_get_carousel(_arg0)
	runtime.KeepAlive(self)

	var _carousel *Carousel // out

	if _cret != nil {
		_carousel = wrapCarousel(externglib.Take(unsafe.Pointer(_cret)))
	}

	return _carousel
}

// SetCarousel sets the displayed carousel.
//
// The function takes the following parameters:
//
//    - carousel: carousel.
//
func (self *CarouselIndicatorDots) SetCarousel(carousel *Carousel) {
	var _arg0 *C.AdwCarouselIndicatorDots // out
	var _arg1 *C.AdwCarousel              // out

	_arg0 = (*C.AdwCarouselIndicatorDots)(unsafe.Pointer(self.Native()))
	if carousel != nil {
		_arg1 = (*C.AdwCarousel)(unsafe.Pointer(carousel.Native()))
	}

	C.adw_carousel_indicator_dots_set_carousel(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(carousel)
}
